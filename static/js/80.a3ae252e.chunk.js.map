{"version":3,"file":"static/js/80.a3ae252e.chunk.js","mappings":"2TAEAA,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,IAAAA,IAAA,sCAAyCC,IAD3D,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBP,IAAAA,IAAA,iBAAoBO,EAApB,oBAAuCN,IADzD,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,uFACkBT,IAAAA,IAAA,gCACIC,EADJ,kBACqBQ,IAFvC,cACCN,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAuBH,GAAvB,uFACkBP,IAAAA,IAAA,iBACXO,EADW,4BACgBN,IAFlC,cACCE,EADD,yBAIEA,EAASC,KAAKO,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BL,GAA1B,uFACkBP,IAAAA,IAAA,iBACXO,EADW,4BACgBN,IAFlC,cACCE,EADD,yBAIEA,EAASC,KAAKC,SAJhB,oE,oJC5BP,GAAgB,KAAO,sBAAsB,KAAO,sBAAsB,OAAS,yB,SC8CnF,MAzCA,WACE,IAAQE,GAAYM,EAAAA,EAAAA,MAAZN,QACR,GAAsCO,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAqBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAML,EAAU,mCAAG,6GAEIM,EAAAA,GAAeX,GAFnB,QAETI,EAFS,SAKbK,EAAeL,GALF,gDASfQ,EAAAA,GAAAA,MAAY,KAAMC,SATH,yDAAH,qDAchBR,MACC,CAACL,IAEGQ,EAAYM,OAAS,GAC1B,+BACE,eAAIC,UAAWC,EAAAA,KAAf,SACGR,EAAYS,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC9B,OACE,gBAAaL,UAAWC,EAAAA,KAAxB,WACE,eAAID,UAAWC,EAAAA,OAAf,SAA0BG,KAC1B,cAAGJ,UAAWC,EAAAA,QAAd,SAA0BI,MAFnBF,WASjB","sources":["API/API.js","webpack://react-homework-template/./src/pages/Reviews/Reviews.module.css?9a3e","pages/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7ec6aaa9ac74287271b32dacda62a7bd';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function getMovies(query) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n}\n\nexport async function getCast(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n}\n\nexport async function getReviews(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__pCzae\",\"item\":\"Reviews_item__G1rz-\",\"author\":\"Reviews_author__Y70Lx\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../../API/API';\nimport { toast } from 'react-toastify';\nimport s from './Reviews.module.css';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [filmReviews, setFilmReviews] = useState([]);\n  //   console.log(movieId);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const cast = await API.getReviews(movieId);\n\n        if (cast) {\n          setFilmReviews(cast);\n          // console.log(cast);\n        }\n      } catch (error) {\n        toast.error(error.message);\n        // console.log(error.message);\n      }\n    };\n\n    getReviews();\n  }, [movieId]);\n\n  return filmReviews.length > 0 ? (\n    <>\n      <ul className={s.list}>\n        {filmReviews.map(({ id, author, content }) => {\n          return (\n            <li key={id} className={s.item}>\n              <h4 className={s.author}>{author}</h4>\n              <p className={s.content}>{content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  ) : (\n    <p>We don't have any reviews for this movie</p>\n  );\n}\n\nexport default Reviews;\n"],"names":["axios","API_KEY","getTrendingMovies","response","data","results","getMovieDetails","movieId","getMovies","query","getCast","cast","getReviews","useParams","useState","filmReviews","setFilmReviews","useEffect","API","toast","message","length","className","s","map","id","author","content"],"sourceRoot":""}