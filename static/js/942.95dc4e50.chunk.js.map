{"version":3,"file":"static/js/942.95dc4e50.chunk.js","mappings":"6LACA,G,QAAyB,wB,SCYzB,EARe,WACb,OACE,gBAAKA,UAAWC,EAAhB,UACE,SAAC,KAAD,CAAMC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,S,mJCP/C,EAAuB,yBAAvB,EAAwD,0BAAxD,EAA2F,2B,SC6C3F,MAzCA,YAAmC,IAAbC,EAAY,EAAZA,SACpB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAmBA,OACE,+BACE,kBAAMH,SAdW,SAAAI,GACnBA,EAAMC,iBAEoB,KAAtBH,EAAWI,QAKfN,EAASE,GACTC,EAAc,KALZI,EAAAA,GAAAA,QAAc,+BAUgBZ,UAAWC,EAAzC,WACE,kBACEY,KAAK,OACLC,MAAOP,EACPP,UAAWC,EACXc,SAxBa,SAAAN,GACnB,IAAMF,EAAaE,EAAMO,cAAcF,MACvCN,EAAcD,OAwBV,mBAAQM,KAAK,SAASb,UAAWC,EAAjC,0B,8BC1BFgB,EACK,UADLA,EAEK,UAFLA,EAGM,WA0DZ,MAvDA,WAAmB,IAAD,EAChB,GAA4BX,EAAAA,EAAAA,UAAS,MAArC,eAAOY,EAAP,KAAeC,EAAf,KACA,GAA4Bb,EAAAA,EAAAA,UAASW,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GA+B3C,OAxBAC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVF,EAAJ,CAIA,IAAMG,EAAY,mCAAG,2FACnBT,EAAUJ,GADS,kBAGIc,EAAAA,GAAcJ,GAHlB,OAKK,KAFhBT,EAHW,QAKNc,QACTpB,EAAAA,GAAAA,QAAA,8BAAqCe,IAEvCR,EAAUD,GARO,gDAUjBN,EAAAA,GAAAA,MAAY,KAAMqB,SAVD,yBAYjBZ,EAAUJ,GAZO,4EAAH,qDAgBlBa,OACC,CAACH,KAGF,iCACE,SAAC,EAAD,CAAYtB,SA9BC,SAAAsB,GACfD,EAAgB,CAAEC,MAAAA,OA8BfP,IAAWH,IAAkB,SAACiB,EAAA,EAAD,IAC7Bd,IAAWH,IACV,wBACGC,EAAOiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,eAAarC,UAAWC,EAAAA,EAAAA,eAAxB,UACE,SAAC,KAAD,CAAMqC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMlB,GAA1C,SACGe,KAFID,a,mBCxDrB,KAAgB,SAAW,yBAAyB,OAAS,uBAAuB,YAAc,4BAA4B,OAAS,uBAAuB,OAAS,uBAAuB,MAAQ,sBAAsB,OAAS,uBAAuB,SAAW,yBAAyB,WAAa,2BAA2B,SAAW,yBAAyB,SAAW,yBAAyB,eAAiB","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.js","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.js","pages/Movies.js","webpack://react-homework-template/./src/styles.module.css?91bc"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import React from 'react';\nimport { Bars } from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={s.loader}>\n      <Bars color=\"#fc950e\" height={80} width={80} />\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__o80os\",\"input\":\"SearchForm_input__HOxJo\",\"button\":\"SearchForm_button__UXY06\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport s from './SearchForm.module.css';\n\nfunction SearchForm({ onSubmit }) {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleChange = event => {\n    const inputValue = event.currentTarget.value;\n    setInputValue(inputValue);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (inputValue.trim() === '') {\n      toast.warning('Please, enter something...');\n      return;\n    }\n\n    onSubmit(inputValue);\n    setInputValue('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.form}>\n        <input\n          type=\"text\"\n          value={inputValue}\n          className={s.input}\n          onChange={handleChange}\n        ></input>\n        <button type=\"submit\" className={s.button}>\n          Search\n        </button>\n      </form>\n    </>\n  );\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport SearchForm from 'components/SearchForm';\nimport * as API from '../API/API';\nimport { toast } from 'react-toastify';\nimport Loader from 'components/Loader';\nimport s from '../styles.module.css';\n\nconst STATUS = {\n  LOADING: 'loading',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n};\n\nfunction Movies() {\n  const [movies, setMovies] = useState(null);\n  const [status, setStatus] = useState(STATUS.PENDING);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  // console.log(query);\n\n  const onSearch = query => {\n    setSearchParams({ query });\n  };\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    const searchMovies = async () => {\n      setStatus(STATUS.LOADING);\n      try {\n        const movies = await API.getMovies(query);\n\n        if (movies.length === 0) {\n          toast.warning(`No movies for query ${query}`);\n        }\n        setMovies(movies);\n      } catch (error) {\n        toast.error(error.message);\n      } finally {\n        setStatus(STATUS.RESOLVED);\n      }\n    };\n\n    searchMovies();\n  }, [query]);\n\n  return (\n    <>\n      <SearchForm onSubmit={onSearch} />\n      {status === STATUS.LOADING && <Loader />}\n      {status === STATUS.RESOLVED && (\n        <ul>\n          {movies.map(({ id, title }) => (\n            <li key={id} className={s.moviesListItem}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default Movies;\n","// extracted by mini-css-extract-plugin\nexport default {\"homeItem\":\"styles_homeItem__CYDJw\",\"header\":\"styles_header__rqNRg\",\"cardWrapper\":\"styles_cardWrapper__xhdCp\",\"button\":\"styles_button__3EfhQ\",\"poster\":\"styles_poster__qrzCF\",\"title\":\"styles_title__e4Gdh\",\"rating\":\"styles_rating__xvu70\",\"overview\":\"styles_overview__5+zsr\",\"infoHeader\":\"styles_infoHeader__EsjDB\",\"infoList\":\"styles_infoList__LXAVF\",\"infoItem\":\"styles_infoItem__8Kicm\",\"moviesListItem\":\"styles_moviesListItem__pakrP\"};"],"names":["className","s","color","height","width","onSubmit","useState","inputValue","setInputValue","event","preventDefault","trim","toast","type","value","onChange","currentTarget","STATUS","movies","setMovies","status","setStatus","location","useLocation","useSearchParams","searchParams","setSearchParams","query","get","useEffect","searchMovies","API","length","message","Loader","map","id","title","to","state","from"],"sourceRoot":""}