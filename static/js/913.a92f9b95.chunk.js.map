{"version":3,"file":"static/js/913.a92f9b95.chunk.js","mappings":"4TAEAA,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,IAAAA,IAAA,sCAAyCC,IAD3D,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBP,IAAAA,IAAA,iBAAoBO,EAApB,oBAAuCN,IADzD,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,uFACkBT,IAAAA,IAAA,gCACIC,EADJ,kBACqBQ,IAFvC,cACCN,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAuBH,GAAvB,uFACkBP,IAAAA,IAAA,iBACXO,EADW,4BACgBN,IAFlC,cACCE,EADD,yBAIEA,EAASC,KAAKO,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BL,GAA1B,uFACkBP,IAAAA,IAAA,iBACXO,EADW,4BACgBN,IAFlC,cACCE,EADD,yBAIEA,EAASC,KAAKC,SAJhB,oE,mJC5BP,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA4E,oBAA5E,EAAuG,mB,SCkDvG,MA7CA,WACE,IAAQE,GAAYM,EAAAA,EAAAA,MAAZN,QACR,GAAgCO,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMP,EAAO,mCAAG,6GAEOQ,EAAAA,GAAYX,GAFnB,QAENI,EAFM,SAKVK,EAAYL,GALF,gDAQZQ,EAAAA,GAAAA,MAAY,KAAMC,SARN,yDAAH,qDAYbV,MACC,CAACH,IAEGQ,EAASM,OAAS,GACvB,+BACE,eAAIC,UAAWC,EAAf,SACGR,EAASS,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACpC,OACE,gBAAaN,UAAWC,EAAxB,WACE,gBACEM,IAAG,0CAAqCD,GACxCE,IAAKJ,EACLK,MAAM,MACNC,OAAO,MACPV,UAAWC,KAEb,cAAGD,UAAWC,EAAd,SAAuBG,KACvB,uCAAeC,OATRF,WAgBjB","sources":["API/API.js","webpack://react-homework-template/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7ec6aaa9ac74287271b32dacda62a7bd';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function getMovies(query) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n}\n\nexport async function getCast(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n}\n\nexport async function getReviews(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__oOD41\",\"item\":\"Cast_item__vxHbm\",\"image\":\"Cast_image__ELqru\",\"name\":\"Cast_name__y8nr9\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../../API/API';\nimport { toast } from 'react-toastify';\nimport s from './Cast.module.css';\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const [filmCast, setFilmCast] = useState([]);\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const cast = await API.getCast(movieId);\n\n        if (cast) {\n          setFilmCast(cast);\n        }\n      } catch (error) {\n        toast.error(error.message);\n      }\n    };\n\n    getCast();\n  }, [movieId]);\n\n  return filmCast.length > 0 ? (\n    <>\n      <ul className={s.list}>\n        {filmCast.map(({ id, name, character, profile_path }) => {\n          return (\n            <li key={id} className={s.item}>\n              <img\n                src={`https://image.tmdb.org/t/p/w342/${profile_path}`}\n                alt={name}\n                width=\"170\"\n                height=\"256\"\n                className={s.image}\n              />\n              <p className={s.name}>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  ) : (\n    <p>We don't have cast for this movie</p>\n  );\n}\n\nexport default Cast;\n"],"names":["axios","API_KEY","getTrendingMovies","response","data","results","getMovieDetails","movieId","getMovies","query","getCast","cast","getReviews","useParams","useState","filmCast","setFilmCast","useEffect","API","toast","message","length","className","s","map","id","name","character","profile_path","src","alt","width","height"],"sourceRoot":""}